name: CI

on: [push, pull_request]

jobs:
  lint:
    # We want to run on external PRs, but not on our own internal PRs as they'll be run
    # by the push to the branch. Without this if check, checks are duplicated since
    # internal PRs match both the push and pull_request events.
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name !=
      github.repository
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: "Set up Python"
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: "Install dependencies"
        run: |
          python -m pip install --upgrade pre-commit

      - name: Lint
        run: pre-commit run --show-diff-on-failure --files  skmob/tessellation/*

  test:
    # runs only when lint step succeeds
    needs: lint
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.8", "3.9"]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade poetry tox tox-gh-actions

      - name: "Test and coverage"
        run: |
          python3 -m poetry run tox

      - name: "Upload Artifact"
        uses: actions/upload-artifact@v2
        with:
          name: code-coverage
          path: coverage
          retention-days: 5

  build-docs:
    needs: test # runs only when lint lint and test steps succeed, and only on master branch
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'

    steps:
      - uses: actions/checkout@v2

      - name: "Set up Python"
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: "Install dependencies"
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade poetry sphinx sphinx_rtd_theme sphinx-copybutton
          poetry export --dev -f requirements.txt > requirements.txt
          pip install -r requirements.txt

      - name: "Build documentation"
        working-directory: docs
        run: make html

      # we need nojekyll or github will ignore folders starting with "_"
      - name: "Copy static files"
        run: |
          mv .nojekyll static/html
          mv logo_skmob.png static/html
          mkdir static/html/coverage

      - name: "Download Artifact"
        uses: actions/download-artifact@v2
        with:
          name: code-coverage
          path: static/html/coverage

      - name: "Deploy Docs ðŸš€"
        uses: JamesIves/github-pages-deploy-action@4.1.1
        with:
          branch: gh-pages # The branch the action should deploy to.
          folder: static/html # The folder the action should deploy.
